(function() {
    var type_impls = Object.fromEntries([["async_fence",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#44\">Source</a><a href=\"#impl-Debug-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#44\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#124-135\">Source</a><a href=\"#impl-Default-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#128-134\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#61-76\">Source</a><a href=\"#impl-Drop-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#62-75\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/nightly/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#138-234\">Source</a><a href=\"#impl-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr&gt; <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#143-154\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.get\" class=\"fn\">get</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a reference to the underlying value if initialized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#157-167\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a mutable reference to the underlying value if initialized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#170-186\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the underlying value if initialized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#196-208\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.set\" class=\"fn\">set</a>(&amp;self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.unit.html\">()</a>, T&gt;</h4></section></summary><div class=\"docblock\"><p>Immediately sets the internal value if uninitialized.</p>\n<p>On failure, the unset value is returned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_insert\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#215-233\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.try_insert\" class=\"fn\">try_insert</a>(&amp;self, value: T) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;T</a>, (<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;T</a>, T)&gt;</h4></section></summary><div class=\"docblock\"><p>Tries to immediately set and return the internal value if uninitialized.</p>\n<p>On success, a reference to the set value is returned.\nOn failure, the already-set value and the unset value are returned\n(ALREADY_SET, value).</p>\n</div></details></div></details>",0,"async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#256-277\">Source</a><a href=\"#impl-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr&gt; <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.take_extending\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#263-276\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.take_extending\" class=\"fn\">take_extending</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the underlying value if initialized, resetting to default.</p>\n<p>Only works on dynamic backing arrays.</p>\n</div></details></div></details>",0,"async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#404-444\">Source</a><a href=\"#impl-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr&gt; <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_or_init\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#416-432\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.get_or_init\" class=\"fn\">get_or_init</a>&lt;F&gt;(&amp;self, fut: F) -&gt; <a class=\"enum\" href=\"async_fence/once/enum.OnceLockInit.html\" title=\"enum async_fence::once::OnceLockInit\">OnceLockInit</a>&lt;'_, T, Arr, F&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"OnceLockInit&lt;&#39;_, T, Arr, F&gt;\">ⓘ</a><div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Returns a future for the inner value.</p>\n<p>If the value is uninitialized, and not currently being initialized,\n<code>fut</code> will be used to initialize it.</p>\n<p>If the initializer is dropped, the next call will produce a new\ninitializer. Other initializing methods will also apply. No existing\nwaiters will switch to initializers, they will just wait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wait\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#438-443\">Source</a><h4 class=\"code-header\">pub fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.wait\" class=\"fn\">wait</a>(&amp;self) -&gt; <a class=\"struct\" href=\"async_fence/once/struct.OnceLockWait.html\" title=\"struct async_fence::once::OnceLockWait\">OnceLockWait</a>&lt;'_, T, Arr&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"OnceLockWait&lt;&#39;_, T, Arr&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Waits for initialization and returns that value.</p>\n<p>If the inner value is never initialized, the future will never\ncomplete.</p>\n</div></details></div></details>",0,"async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#86-101\">Source</a><a href=\"#impl-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr&gt; <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#94-100\">Source</a><h4 class=\"code-header\">pub const unsafe fn <a href=\"async_fence/once/struct.OnceLock.html#tymethod.new\" class=\"fn\">new</a>(queue: Arr) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\"><code>Self</code></a> backed by the empty queue.</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>The queue <em>must</em> be entirely filled as <a href=\"https://doc.rust-lang.org/nightly/core/mem/maybe_uninit/union.MaybeUninit.html#method.uninit\" title=\"associated function core::mem::maybe_uninit::MaybeUninit::uninit\"><code>MaybeUninit::uninit</code></a>.</p>\n</div></details></div></details>",0,"async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#78-82\">Source</a><a href=\"#impl-PartialEq-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#79-81\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#262\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<section id=\"impl-Eq-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#84\">Source</a><a href=\"#impl-Eq-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;</h3></section>","Eq","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<section id=\"impl-RefUnwindSafe-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#59\">Source</a><a href=\"#impl-RefUnwindSafe-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/panic/unwind_safe/trait.RefUnwindSafe.html\" title=\"trait core::panic::unwind_safe::RefUnwindSafe\">RefUnwindSafe</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;</h3></section>","RefUnwindSafe","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<section id=\"impl-Send-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#55\">Source</a><a href=\"#impl-Send-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,</div></h3><div class=\"docblock\"><p>Standard removal of the !Send forced by <a href=\"https://doc.rust-lang.org/nightly/core/cell/struct.UnsafeCell.html\" title=\"struct core::cell::UnsafeCell\"><code>UnsafeCell</code></a>.</p>\n</div></section>","Send","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"],["<section id=\"impl-Sync-for-OnceLock%3CT,+Arr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/async_fence/once.rs.html#57\">Source</a><a href=\"#impl-Sync-for-OnceLock%3CT,+Arr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, Arr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsMut.html\" title=\"trait core::convert::AsMut\">AsMut</a>&lt;[<a class=\"type\" href=\"async_fence/core/type.FenceWaker.html\" title=\"type async_fence::core::FenceWaker\">FenceWaker</a>]&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"async_fence/once/struct.OnceLock.html\" title=\"struct async_fence::once::OnceLock\">OnceLock</a>&lt;T, Arr&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3><div class=\"docblock\"><p>Standard removal of the !Sync forced by <a href=\"https://doc.rust-lang.org/nightly/core/cell/struct.UnsafeCell.html\" title=\"struct core::cell::UnsafeCell\"><code>UnsafeCell</code></a>.</p>\n</div></section>","Sync","async_fence::once::StaticOnceLock","async_fence::once::VecOnceLock"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[24362]}